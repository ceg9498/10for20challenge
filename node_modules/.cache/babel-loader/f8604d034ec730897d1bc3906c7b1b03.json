{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\src\\\\components\\\\EntryForm.tsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nexport default class EntryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: this.props.tasks[0],\n      date: `${new Date().getFullYear()}-${(new Date().getMonth() + 1).toString().padStart(2, '0')}-${new Date().getDate()}`,\n      validation: \"\"\n    };\n  }\n\n  handleChange(e) {\n    let _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    e.preventDefault();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  submitEntry() {\n    if (this.state.task !== \"\" && this.state.task !== \"placeholder\") {\n      this.props.updateEntries({\n        date: this.state.date,\n        task: this.state.task\n      });\n    } else {\n      this.state.setState({\n        validation: \"You must select a task\"\n      });\n    }\n  }\n\n  render() {\n    console.log(\"Entry form state:\", this.state);\n    console.log(\"Entry form props:\", this.props);\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"date-pick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Date\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"input\",\n      type: \"date\",\n      name: \"date\",\n      value: this.state.date,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"task-pick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Task Completed\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"task\",\n      value: \"placeholder\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"placeholder\",\n      disabled: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Select a Task\"), this.props.tasks && this.props.tasks.map(task => task !== \"\" && React.createElement(\"option\", {\n      key: task,\n      value: task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, task))))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.validation))), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.props.submitEntry(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/EntryForm.tsx"],"names":["React","Form","Col","Button","EntryForm","Component","constructor","props","state","task","tasks","date","Date","getFullYear","getMonth","toString","padStart","getDate","validation","handleChange","e","target","name","value","preventDefault","setState","submitEntry","updateEntries","render","console","log","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class EntryForm extends React.Component<{tasks:string[], updateEntries:Function}, any>{\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      task: this.props.tasks[0],\r\n      date: `${new Date().getFullYear()}-${(new Date().getMonth()+1).toString().padStart(2, '0')}-${new Date().getDate()}`,\r\n      validation: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(e:any){\r\n    let { name, value } = e.target;\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  submitEntry(){\r\n    if(this.state.task !== \"\" && this.state.task !== \"placeholder\"){\r\n      this.props.updateEntries({date:this.state.date, task: this.state.task});\r\n    } else {\r\n      this.state.setState({\r\n        validation: \"You must select a task\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    console.log(\"Entry form state:\", this.state)\r\n    console.log(\"Entry form props:\", this.props)\r\n    return(\r\n      <Form>\r\n        {/** Date Picker */}\r\n        <Form.Group controlId=\"date-pick\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label>Date</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control as=\"input\" type=\"date\" \r\n                name=\"date\"\r\n                value={this.state.date} \r\n                onChange={(e)=>this.handleChange(e)}>\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        {/** Time Spent (TODO) */}\r\n\r\n        {/** Task Completed (select) */}\r\n        <Form.Group controlId=\"task-pick\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label>Task Completed</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control as=\"select\" \r\n                name=\"task\"\r\n                value=\"placeholder\"\r\n                onChange={(e)=>this.handleChange(e)}\r\n              >\r\n                <option value=\"placeholder\" disabled hidden>Select a Task</option>\r\n                {this.props.tasks && this.props.tasks.map((task)=>\r\n                  task !== \"\" &&\r\n                    <option key={task} value={task}>{task}</option>\r\n                )}\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Text className=\"text-muted\">\r\n              { this.state.validation }\r\n            </Form.Text>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={()=>this.props.submitEntry()}>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}