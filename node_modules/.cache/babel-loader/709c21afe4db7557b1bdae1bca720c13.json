{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\src\\\\components\\\\TasksForm.tsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; // form for adding/editing tasks to the list of 10\n\nexport default class TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: this.props.tasks\n    };\n  }\n\n  onChange(e, index) {\n    e.preventDefault();\n    let tasks = this.state.tasks;\n    tasks[index] = e.target.value;\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.state.tasks.map((task, index) => React.createElement(Form.Group, {\n      controlId: \"task-\" + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: taskRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        width: \"40px\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"#\", index + 1), React.createElement(Form.Control, {\n      type: \"text\",\n      value: task,\n      onChange: e => this.onChange(e, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.props.updateTasks(this.state.tasks),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\nlet taskRow = {\n  display: \"flex\"\n};","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/TasksForm.tsx"],"names":["React","Form","Button","TaskForm","Component","constructor","props","state","tasks","onChange","e","index","preventDefault","target","value","setState","render","map","task","taskRow","width","marginTop","updateTasks","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;;AACA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAmF;AAChGC,EAAAA,WAAW,CAACC,KAAD,EAA8C;AACvD,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWE;AADN,KAAb;AAGD;;AAEDC,EAAAA,QAAQ,CAACC,CAAD,EAAQC,KAAR,EAAqB;AAC3BD,IAAAA,CAAC,CAACE,cAAF;AAEA,QAAIJ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACAA,IAAAA,KAAK,CAACG,KAAD,CAAL,GAAeD,CAAC,CAACG,MAAF,CAASC,KAAxB;AAEA,SAAKC,QAAL,CAAc;AACZP,MAAAA,KAAK,EAAEA;AADK,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqB,CAACC,IAAD,EAAcP,KAAd,KACpB,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAE,UAAUA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAEQ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwDV,KAAK,GAAC,CAA9D,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAEO,IAAjC;AAAwC,MAAA,QAAQ,EAAGR,CAAD,IAAS,KAAKD,QAAL,CAAcC,CAAd,EAAiBC,KAAjB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADD,CADH,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAI,KAAKL,KAAL,CAAWgB,WAAX,CAAuB,KAAKf,KAAL,CAAWC,KAAlC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF;AAaD;;AAjC+F;AAoClG,IAAIW,OAAO,GAAG;AACZI,EAAAA,OAAO,EAAE;AADG,CAAd","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// form for adding/editing tasks to the list of 10\r\nexport default class TaskForm extends React.Component<{tasks:string[], updateTasks:Function}, any>{\r\n  constructor(props:{tasks:string[], updateTasks:Function}){\r\n    super(props);\r\n    this.state = {\r\n      tasks:this.props.tasks,\r\n    }\r\n  }\r\n\r\n  onChange(e:any, index:number){\r\n    e.preventDefault();\r\n\r\n    let tasks = this.state.tasks;\r\n    tasks[index] = e.target.value;\r\n\r\n    this.setState({\r\n      tasks: tasks\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Form>\r\n        {this.state.tasks.map((task:string, index:number)=>\r\n          <Form.Group controlId={\"task-\" + index}>\r\n            <div style={taskRow}>\r\n              <Form.Label style={{width: \"40px\", marginTop: \"5px\"}}>#{index+1}</Form.Label>\r\n              <Form.Control type=\"text\" value={task}  onChange={(e:any)=>this.onChange(e, index)} />\r\n            </div>\r\n          </Form.Group>\r\n        )}\r\n        <Button variant=\"primary\" onClick={()=>this.props.updateTasks(this.state.tasks)}>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nlet taskRow = {\r\n  display: \"flex\"\r\n}"]},"metadata":{},"sourceType":"module"}