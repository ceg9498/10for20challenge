{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\src\\\\components\\\\TasksForm.tsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button'; // form for adding/editing tasks to the list of 10\n\nexport default function TaskForm(props) {\n  let tasks = [];\n\n  if (props.tasks) {\n    props.tasks.forEach(task => {\n      tasks.push(task);\n    });\n  }\n\n  if (tasks.length !== 10) {\n    for (let i = tasks.length; i < 10; i++) {\n      tasks[i] = \"\";\n    }\n  }\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, tasks.map((task, index) => React.createElement(TaskGroup, {\n    task: task,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => props.updateTasks(tasks),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nclass TaskGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: this.props.task\n    };\n  }\n\n  onChange(e) {\n    e.target.preventDefault();\n    this.setState({\n      task: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Form.Group, {\n      controlId: \"task-\" + this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: taskRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        width: \"40px\",\n        marginTop: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"#\", this.props.index + 1), React.createElement(Form.Control, {\n      type: \"text\",\n      value: this.state.task,\n      onChange: e => this.onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet taskRow = {\n  display: \"flex\"\n};","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/TasksForm.tsx"],"names":["React","Form","Button","TaskForm","props","tasks","forEach","task","push","length","i","map","index","updateTasks","TaskGroup","Component","constructor","state","onChange","e","target","preventDefault","setState","value","render","taskRow","width","marginTop","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CAEA;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA+D;AAC5E,MAAIC,KAAc,GAAG,EAArB;;AACA,MAAGD,KAAK,CAACC,KAAT,EAAe;AACbD,IAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAiB;AACnCF,MAAAA,KAAK,CAACG,IAAN,CAAWD,IAAX;AACD,KAFD;AAGD;;AACD,MAAGF,KAAK,CAACI,MAAN,KAAiB,EAApB,EAAuB;AACrB,SAAI,IAAIC,CAAC,GAAGL,KAAK,CAACI,MAAlB,EAA0BC,CAAC,GAAG,EAA9B,EAAkCA,CAAC,EAAnC,EAAsC;AACpCL,MAAAA,KAAK,CAACK,CAAD,CAAL,GAAW,EAAX;AACD;AACF;;AACD,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,GAAN,CAAU,CAACJ,IAAD,EAAOK,KAAP,KACT,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEL,IAAjB;AAAuB,IAAA,KAAK,EAAEK,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAE,MAAIR,KAAK,CAACS,WAAN,CAAkBR,KAAlB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAQD;;AAED,MAAMS,SAAN,SAAwBd,KAAK,CAACe,SAA9B,CAAyE;AACvEC,EAAAA,WAAW,CAACZ,KAAD,EAAmC;AAC5C,UAAMA,KAAN;AACA,SAAKa,KAAL,GAAa;AACXV,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADN,KAAb;AAGD;;AAEDW,EAAAA,QAAQ,CAACC,CAAD,EAAO;AACbA,IAAAA,CAAC,CAACC,MAAF,CAASC,cAAT;AACA,SAAKC,QAAL,CAAc;AACZf,MAAAA,IAAI,EAAEY,CAAC,CAACC,MAAF,CAASG;AADH,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAE,UAAU,KAAKpB,KAAL,CAAWQ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAEa,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,SAAS,EAAE;AAA3B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwD,KAAKvB,KAAL,CAAWQ,KAAX,GAAiB,CAAzE,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWV,IAA5C;AAAmD,MAAA,QAAQ,EAAGY,CAAD,IAAS,KAAKD,QAAL,CAAcC,CAAd,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAxBsE;;AA2BzE,IAAIM,OAAO,GAAG;AACZG,EAAAA,OAAO,EAAE;AADG,CAAd","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// form for adding/editing tasks to the list of 10\r\nexport default function TaskForm(props:{tasks:string[], updateTasks:Function}){\r\n  let tasks:string[] = [];\r\n  if(props.tasks){\r\n    props.tasks.forEach((task:string) => {\r\n      tasks.push(task);\r\n    });\r\n  }\r\n  if(tasks.length !== 10){\r\n    for(let i = tasks.length; i < 10; i++){\r\n      tasks[i] = \"\";\r\n    }\r\n  }\r\n  return(\r\n    <Form>\r\n      {tasks.map((task, index)=>\r\n        <TaskGroup task={task} index={index} />\r\n      )}\r\n      <Button variant=\"primary\" onClick={()=>props.updateTasks(tasks)}>Submit</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nclass TaskGroup extends React.Component<{index:number, task:string}, any>{\r\n  constructor(props:{index:number, task:string}){\r\n    super(props);\r\n    this.state = {\r\n      task: this.props.task\r\n    };\r\n  }\r\n\r\n  onChange(e:any){\r\n    e.target.preventDefault();\r\n    this.setState({\r\n      task: e.target.value\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Form.Group controlId={\"task-\" + this.props.index}>\r\n        <div style={taskRow}>\r\n          <Form.Label style={{width: \"40px\", marginTop: \"5px\"}}>#{this.props.index+1}</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.task}  onChange={(e:any)=>this.onChange(e)} />\r\n        </div>\r\n      </Form.Group>\r\n    )\r\n  }\r\n}\r\n\r\nlet taskRow = {\r\n  display: \"flex\"\r\n}"]},"metadata":{},"sourceType":"module"}