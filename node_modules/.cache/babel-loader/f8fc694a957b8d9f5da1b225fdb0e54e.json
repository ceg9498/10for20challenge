{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\src\\\\components\\\\EntryForm.tsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nexport default class EntryForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: \"\",\n      date: `${new Date().getFullYear()}-${new Date().getMonth()}-${new Date().getDate()}`\n    };\n  }\n\n  handleChange(e) {\n    let _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    e.preventDefault();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"date-pick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Date\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"input\",\n      type: \"date\",\n      name: \"date\",\n      value: this.state.date,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"task-pick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Task Completed\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"task\",\n      value: this.state.task,\n      placeholder: \"Task\",\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.tasks.map(task => task !== \"\" && React.createElement(\"option\", {\n      key: task,\n      value: task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, task)))))), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.props.updateEntries({\n        date: this.state.date,\n        task: this.state.task\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/EntryForm.tsx"],"names":["React","Form","Col","Button","EntryForm","Component","constructor","props","state","task","date","Date","getFullYear","getMonth","getDate","handleChange","e","target","name","value","preventDefault","setState","render","tasks","map","updateEntries"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class EntryForm extends React.Component<{tasks:string[], updateEntries:Function}, any>{\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      task: \"\",\r\n      date: `${new Date().getFullYear()}-${new Date().getMonth()}-${new Date().getDate()}`\r\n    };\r\n  }\r\n\r\n  handleChange(e:any){\r\n    let { name, value } = e.target;\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Form>\r\n        {/** Date Picker */}\r\n        <Form.Group controlId=\"date-pick\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label>Date</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control as=\"input\" type=\"date\" \r\n                name=\"date\"\r\n                value={this.state.date} \r\n                onChange={(e)=>this.handleChange(e)}>\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        {/** Time Spent (TODO) */}\r\n\r\n        {/** Task Completed (select) */}\r\n        <Form.Group controlId=\"task-pick\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label>Task Completed</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control as=\"select\" \r\n                name=\"task\"\r\n                value={this.state.task} \r\n                placeholder=\"Task\"\r\n                onChange={(e)=>this.handleChange(e)}\r\n              >\r\n                {this.props.tasks.map((task)=>\r\n                  task !== \"\" &&\r\n                    <option key={task} value={task}>{task}</option>\r\n                )}\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={()=>this.props.updateEntries({date:this.state.date, task:this.state.task})}>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}