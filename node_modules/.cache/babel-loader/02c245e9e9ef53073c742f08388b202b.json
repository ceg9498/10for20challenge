{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Form from'react-bootstrap/Form';import Col from'react-bootstrap/Col';import Button from'react-bootstrap/Button';var EntryForm=/*#__PURE__*/function(_React$Component){_inherits(EntryForm,_React$Component);function EntryForm(props){var _this;_classCallCheck(this,EntryForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(EntryForm).call(this,props));_this.state={task:\"placeholder\",date:\"\".concat(new Date().getFullYear(),\"-\").concat((new Date().getMonth()+1).toString().padStart(2,'0'),\"-\").concat(new Date().getDate()),validation:\"\"};return _this;}_createClass(EntryForm,[{key:\"handleChange\",value:function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;e.preventDefault();if(name===\"task\"){this.setState({validation:\"\"});}this.setState(_defineProperty({},name,value));}},{key:\"submitEntry\",value:function submitEntry(){if(this.state.task!==\"\"&&this.state.task!==\"placeholder\"){this.props.updateEntries({date:this.state.date,task:this.state.task});}else{this.setState({validation:\"You must select a task\"});}}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"date-pick\"},React.createElement(Form.Row,null,React.createElement(Col,null,React.createElement(Form.Label,null,\"Date\")),React.createElement(Col,null,React.createElement(Form.Control,{as:\"input\",type:\"date\",name:\"date\",value:this.state.date,onChange:function onChange(e){return _this2.handleChange(e);}})))),React.createElement(Form.Group,{controlId:\"task-pick\"},React.createElement(Form.Row,null,React.createElement(Col,null,React.createElement(Form.Label,null,\"Task Completed\")),React.createElement(Col,null,React.createElement(Form.Control,{as:\"select\",name:\"task\",value:this.state.task,onChange:function onChange(e){return _this2.handleChange(e);}},React.createElement(\"option\",{value:\"placeholder\",disabled:true,hidden:true},\"Select a Task\"),this.props.tasks&&this.props.tasks.map(function(task){return task!==\"\"&&React.createElement(\"option\",{key:task,value:task},task);})))),React.createElement(Form.Row,null,React.createElement(Form.Text,{className:\"text-muted\"},this.state.validation))),React.createElement(Button,{variant:\"primary\",onClick:function onClick(){return _this2.submitEntry();}},\"Submit\"));}}]);return EntryForm;}(React.Component);export{EntryForm as default};","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/EntryForm.tsx"],"names":["React","Form","Col","Button","EntryForm","props","state","task","date","Date","getFullYear","getMonth","toString","padStart","getDate","validation","e","target","name","value","preventDefault","setState","updateEntries","handleChange","tasks","map","submitEntry","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class EntryForm extends React.Component<{tasks:string[], updateEntries:Function}, any>{\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      task: \"placeholder\",\r\n      date: `${new Date().getFullYear()}-${(new Date().getMonth()+1).toString().padStart(2, '0')}-${new Date().getDate()}`,\r\n      validation: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(e:any){\r\n    let { name, value } = e.target;\r\n    e.preventDefault();\r\n\r\n    if(name === \"task\"){\r\n      this.setState({\r\n        validation: \"\"\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  submitEntry(){\r\n    if(this.state.task !== \"\" && this.state.task !== \"placeholder\"){\r\n      this.props.updateEntries({date:this.state.date, task: this.state.task});\r\n    } else {\r\n      this.setState({\r\n        validation: \"You must select a task\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Form>\r\n        {/** Date Picker */}\r\n        <Form.Group controlId=\"date-pick\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label>Date</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control as=\"input\" type=\"date\" \r\n                name=\"date\"\r\n                value={this.state.date} \r\n                onChange={(e)=>this.handleChange(e)}>\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        {/** Time Spent (TODO) */}\r\n\r\n        {/** Task Completed (select) */}\r\n        <Form.Group controlId=\"task-pick\">\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Label>Task Completed</Form.Label>\r\n            </Col>\r\n            <Col>\r\n              <Form.Control as=\"select\" \r\n                name=\"task\"\r\n                value={this.state.task}\r\n                onChange={(e)=>this.handleChange(e)}\r\n              >\r\n                <option value=\"placeholder\" disabled hidden>Select a Task</option>\r\n                {this.props.tasks && this.props.tasks.map((task)=>\r\n                  task !== \"\" &&\r\n                    <option key={task} value={task}>{task}</option>\r\n                )}\r\n              </Form.Control>\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Text className=\"text-muted\">\r\n              { this.state.validation }\r\n            </Form.Text>\r\n          </Form.Row>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={()=>this.submitEntry()}>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}