{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\src\\\\components\\\\TasksForm.tsx\";\nimport React from 'react';\nimport Form from 'react-bootstrap/Form'; // form for adding/editing tasks to the list of 10\n\nexport default function TaskForm(props) {\n  let tasks = [];\n\n  if (props.tasks) {\n    props.tasks.forEach(task => {\n      tasks.push(task);\n    });\n  }\n\n  if (tasks.length !== 10) {\n    for (let i = tasks.length; i < 10; i++) {\n      tasks[i] = \"\";\n    }\n  }\n\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, tasks.map((task, index) => React.createElement(TaskGroup, {\n    task: task,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n}\n\nfunction TaskGroup(props) {\n  return React.createElement(Form.Group, {\n    controlId: props.index + \"-\" + props.task,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"#\", props.index + 1)), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    value: props.task,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/TasksForm.tsx"],"names":["React","Form","TaskForm","props","tasks","forEach","task","push","length","i","map","index","TaskGroup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA4B;AACzC,MAAIC,KAAc,GAAG,EAArB;;AACA,MAAGD,KAAK,CAACC,KAAT,EAAe;AACbD,IAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAqBC,IAAD,IAAiB;AACnCF,MAAAA,KAAK,CAACG,IAAN,CAAWD,IAAX;AACD,KAFD;AAGD;;AACD,MAAGF,KAAK,CAACI,MAAN,KAAiB,EAApB,EAAuB;AACrB,SAAI,IAAIC,CAAC,GAAGL,KAAK,CAACI,MAAlB,EAA0BC,CAAC,GAAG,EAA9B,EAAkCA,CAAC,EAAnC,EAAsC;AACpCL,MAAAA,KAAK,CAACK,CAAD,CAAL,GAAW,EAAX;AACD;AACF;;AACD,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,GAAN,CAAU,CAACJ,IAAD,EAAOK,KAAP,KACT,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEL,IAAjB;AAAuB,IAAA,KAAK,EAAEK,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD;;AAED,SAASC,SAAT,CAAmBT,KAAnB,EAAqD;AACnD,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEA,KAAK,CAACQ,KAAN,GAAc,GAAd,GAAoBR,KAAK,CAACG,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAcH,KAAK,CAACQ,KAAN,GAAY,CAA1B,CADF,CADF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAER,KAAK,CAACG,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJF,CADF,CADF;AAYD","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// form for adding/editing tasks to the list of 10\r\nexport default function TaskForm(props:any){\r\n  let tasks:string[] = [];\r\n  if(props.tasks){\r\n    props.tasks.forEach((task:string) => {\r\n      tasks.push(task);\r\n    });\r\n  }\r\n  if(tasks.length !== 10){\r\n    for(let i = tasks.length; i < 10; i++){\r\n      tasks[i] = \"\";\r\n    }\r\n  }\r\n  return(\r\n    <Form>\r\n      {tasks.map((task, index)=>\r\n        <TaskGroup task={task} index={index} />\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction TaskGroup(props:{task:string, index:number}){\r\n  return(\r\n    <Form.Group controlId={props.index + \"-\" + props.task}>\r\n      <Row>\r\n        <Col>\r\n          <Form.Label>#{props.index+1}</Form.Label>\r\n        </Col>\r\n        <Col>\r\n        <Form.Control type=\"text\" value={props.task} />\r\n        </Col>\r\n      </Row>\r\n    </Form.Group>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}