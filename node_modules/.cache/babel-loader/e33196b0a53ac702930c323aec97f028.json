{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\src\\\\App.tsx\";\nimport React from 'react';\nimport Navigation from './components/Nav';\nimport Settings from './components/Settings';\nimport Home from './components/Home';\nimport Chart from './components/Chart';\nimport iDB from './data/indexedDb';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      section: \"home\",\n      tasks: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      entries: []\n    };\n    this.setSection = this.setSection.bind(this);\n    this.updateTasks = this.updateTasks.bind(this);\n    this.addEntry = this.addEntry.bind(this);\n  }\n\n  componentDidMount() {\n    iDB.init(\"10for20\", 1, [\"tasks\", \"entries\"]).then(iDB.getAll(\"10for20\", 1, \"tasks\").then(tasks => {\n      this.updateTasks(tasks);\n      iDB.getAll(\"10for20\", 1, \"entries\").then(entries => {\n        entries.forEach(entry => {\n          this.addEntry(entry);\n        });\n      }).catch(message => {\n        console.error(message);\n      });\n    }).catch(message => {\n      console.error(message);\n    })).catch(message => {\n      console.error(message);\n    });\n  }\n\n  setSection(section) {\n    this.setState({\n      section: section\n    });\n  }\n\n  updateTasks(tasks) {\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  addEntry(entry) {\n    let entries = this.state.entries;\n    entries.push(entry);\n    this.setState({\n      entries: entries\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Navigation, {\n      current: \"Current\",\n      bg: \"light\",\n      textTheme: \"light\",\n      setSection: this.setSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), this.state.section === \"home\" && React.createElement(Home, {\n      style: pageBg,\n      tasks: this.state.tasks,\n      updateTasks: this.updateTasks,\n      updateEntries: this.addEntry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.state.section === \"chart\" && React.createElement(Chart, {\n      style: pageBg,\n      tasks: this.state.tasks,\n      entries: this.state.entries,\n      updateTasks: this.updateTasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), this.state.section === \"settings\" && React.createElement(Settings, {\n      style: pageBg,\n      tasks: this.state.tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\nconst pageBg = {\n  backgroundColor: \"lightgrey\",\n  height: \"100vh\",\n  padding: \"20px\",\n  paddingTop: \"76px\"\n};","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/App.tsx"],"names":["React","Navigation","Settings","Home","Chart","iDB","App","Component","constructor","props","state","section","tasks","entries","setSection","bind","updateTasks","addEntry","componentDidMount","init","then","getAll","forEach","entry","catch","message","console","error","setState","push","render","pageBg","backgroundColor","height","padding","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Navigation from './components/Nav';\r\nimport Settings from './components/Settings';\r\nimport Home from './components/Home';\r\nimport Chart from './components/Chart';\r\nimport iDB from './data/indexedDb';\r\n\r\nexport default class App extends React.Component<any,any> {\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state = {\r\n      section: \"home\",\r\n      tasks: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      entries: []\r\n    };\r\n    this.setSection = this.setSection.bind(this);\r\n    this.updateTasks = this.updateTasks.bind(this);\r\n    this.addEntry = this.addEntry.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    iDB.init(\"10for20\", 1, [\"tasks\", \"entries\"])\r\n    .then(\r\n      iDB.getAll(\"10for20\", 1, \"tasks\")\r\n      .then((tasks:string[])=>{\r\n        this.updateTasks(tasks);\r\n        iDB.getAll(\"10for20\", 1, \"entries\")\r\n        .then((entries:any[])=>{\r\n          entries.forEach((entry)=>{\r\n            this.addEntry(entry);\r\n          });\r\n        }).catch((message:string)=>{\r\n          console.error(message);\r\n        })\r\n      }).catch((message:string)=>{\r\n        console.error(message);\r\n      })\r\n    ).catch((message:string) => {\r\n      console.error(message);\r\n    });\r\n  }\r\n\r\n  setSection(section:string) {\r\n    this.setState({\r\n      section:section\r\n    });\r\n  }\r\n\r\n  updateTasks(tasks:string[]){\r\n    this.setState({\r\n      tasks: tasks\r\n    });\r\n  }\r\n\r\n  addEntry(entry:{task:string,date:any}){\r\n    let entries = this.state.entries;\r\n    entries.push(entry);\r\n    this.setState({\r\n      entries: entries\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n        <Navigation\r\n          current=\"Current\" \r\n          bg=\"light\" \r\n          textTheme=\"light\"\r\n          setSection={this.setSection} />\r\n        { this.state.section === \"home\" &&\r\n          <Home style={pageBg} tasks={this.state.tasks} updateTasks={this.updateTasks} updateEntries={this.addEntry} />\r\n        }\r\n        { this.state.section === \"chart\" &&\r\n          <Chart style={pageBg} tasks={this.state.tasks} entries={this.state.entries} updateTasks={this.updateTasks} />\r\n        }\r\n        { this.state.section === \"settings\" &&\r\n          <Settings style={pageBg} tasks={this.state.tasks} />\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst pageBg = {\r\n  backgroundColor: \"lightgrey\",\r\n  height: \"100vh\",\r\n  padding: \"20px\",\r\n  paddingTop: \"76px\"\r\n};"]},"metadata":{},"sourceType":"module"}