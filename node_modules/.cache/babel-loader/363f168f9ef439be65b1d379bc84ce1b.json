{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\ceg94\\\\Development\\\\10for20challenge\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';// form for adding/editing tasks to the list of 10\nvar TaskForm=/*#__PURE__*/function(_React$Component){_inherits(TaskForm,_React$Component);function TaskForm(props){var _this;_classCallCheck(this,TaskForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(TaskForm).call(this,props));_this.state={tasks:_this.props.tasks};return _this;}_createClass(TaskForm,[{key:\"onChange\",value:function onChange(e,index){e.preventDefault();var tasks=this.state.tasks;tasks[index]=e.target.value;this.setState({tasks:tasks});}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(Form,null,this.state.tasks.map(function(task,index){return React.createElement(Form.Group,{controlId:\"task-\"+index,key:\"task-\"+index},React.createElement(\"div\",{style:taskRow},React.createElement(Form.Label,{style:{width:\"40px\",marginTop:\"5px\"}},\"#\",index+1),React.createElement(Form.Control,{type:\"text\",value:task,onChange:function onChange(e){return _this2.onChange(e,index);}})));}),React.createElement(Button,{variant:\"primary\",onClick:function onClick(){return _this2.props.updateTasks(_this2.state.tasks);}},\"Submit\"));}}]);return TaskForm;}(React.Component);export{TaskForm as default};var taskRow={display:\"flex\"};","map":{"version":3,"sources":["C:/Users/ceg94/Development/10for20challenge/src/components/TaskForm.tsx"],"names":["React","Form","Button","TaskForm","props","state","tasks","e","index","preventDefault","target","value","setState","map","task","taskRow","width","marginTop","onChange","updateTasks","Component","display"],"mappings":"q2BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA;GACqBC,CAAAA,Q,8EACnB,kBAAYC,KAAZ,CAAyD,0CACvD,0EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAC,MAAKF,KAAL,CAAWE,KADN,CAAb,CAFuD,aAKxD,C,+DAEQC,C,CAAOC,K,CAAa,CAC3BD,CAAC,CAACE,cAAF,GAEA,GAAIH,CAAAA,KAAK,CAAG,KAAKD,KAAL,CAAWC,KAAvB,CACAA,KAAK,CAACE,KAAD,CAAL,CAAeD,CAAC,CAACG,MAAF,CAASC,KAAxB,CAEA,KAAKC,QAAL,CAAc,CACZN,KAAK,CAAEA,KADK,CAAd,EAGD,C,uCAEO,iBACN,MACE,qBAAC,IAAD,MACG,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqB,SAACC,IAAD,CAAcN,KAAd,QACpB,qBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAE,QAAUA,KAAjC,CAAwC,GAAG,CAAE,QAAUA,KAAvD,EACE,2BAAK,KAAK,CAAEO,OAAZ,EACE,oBAAC,IAAD,CAAM,KAAN,EAAY,KAAK,CAAE,CAACC,KAAK,CAAE,MAAR,CAAgBC,SAAS,CAAE,KAA3B,CAAnB,MAAwDT,KAAK,CAAC,CAA9D,CADF,CAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,KAAK,CAAEM,IAAjC,CAAwC,QAAQ,CAAE,kBAACP,CAAD,QAAS,CAAA,MAAI,CAACW,QAAL,CAAcX,CAAd,CAAiBC,KAAjB,CAAT,EAAlD,EAFF,CADF,CADoB,EAArB,CADH,CASE,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACJ,KAAL,CAAWe,WAAX,CAAuB,MAAI,CAACd,KAAL,CAAWC,KAAlC,CAAJ,EAAnC,WATF,CADF,CAaD,C,sBAjCmCN,KAAK,CAACoB,S,SAAvBjB,Q,aAoCrB,GAAIY,CAAAA,OAAO,CAAG,CACZM,OAAO,CAAE,MADG,CAAd","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// form for adding/editing tasks to the list of 10\r\nexport default class TaskForm extends React.Component<{tasks:string[], updateTasks:Function}, any>{\r\n  constructor(props:{tasks:string[], updateTasks:Function}){\r\n    super(props);\r\n    this.state = {\r\n      tasks:this.props.tasks,\r\n    }\r\n  }\r\n\r\n  onChange(e:any, index:number){\r\n    e.preventDefault();\r\n\r\n    let tasks = this.state.tasks;\r\n    tasks[index] = e.target.value;\r\n\r\n    this.setState({\r\n      tasks: tasks\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Form>\r\n        {this.state.tasks.map((task:string, index:number)=>\r\n          <Form.Group controlId={\"task-\" + index} key={\"task-\" + index}>\r\n            <div style={taskRow}>\r\n              <Form.Label style={{width: \"40px\", marginTop: \"5px\"}}>#{index+1}</Form.Label>\r\n              <Form.Control type=\"text\" value={task}  onChange={(e:any)=>this.onChange(e, index)} />\r\n            </div>\r\n          </Form.Group>\r\n        )}\r\n        <Button variant=\"primary\" onClick={()=>this.props.updateTasks(this.state.tasks)}>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nlet taskRow = {\r\n  display: \"flex\"\r\n}"]},"metadata":{},"sourceType":"module"}